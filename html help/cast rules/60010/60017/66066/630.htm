<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Avoid data members that are not private</title>
<link rel="stylesheet" href="../../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../../default.css" type=
"text/css">

<script type="text/JavaScript" src="../../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "60010/60017/66066/630.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../../index.html?page=cast%20rules%2F60010%2F60017%2F66066%2F630.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../../index.html?page=cast%20rules%2F60010%2F60017%2F66066%2F630.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Avoid data members that are not private</h4>

<hr>

<h5>Technology</h5>

<p>C++</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>No</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>6</p>

<h5>Rationale</h5>

<p>All data members of types declared as 'class' should be defined
as 'private'. They should not be 'public' or 'protected'. By
implementing class interfaces with member functions, the
implementer achieves precise control over how the object state can
be modified and allows a class to be maintained without affecting
clients. This is one of the main benefits and principles of
Object-Oriented design and coding: Encapsulation. If direct access
to the object state is allowed through public members, there is no
way for the class to ensure its invariants are respected. This is a
significant increase in the cost and risk of changes as well as an
increase in security risks. In some cases, a class is only an
aggregate of values, with no specific behavior and no invariants to
preserve. In this situation, it is better to make all data public,
by declaring it as a 'struct' (this is equivalent to a 'class'
immediately followed by 'public', but it clearly documents the
intent).</p>

<h5>Description</h5>

<p>This rule searches for C++ class data members that are not
defined with the "private" visibility.</p>

<h5>Remediation</h5>

<p>Change the the visibility to "private" and implement member
functions to access data members.</p>

<h5>Reference</h5>

<p>High Integrity CPP Rule 3.4.1</p>

<h5>Sample</h5>

<pre>
class Fraction
{
public:
    // Invariants: 
    // The fraction is stored in irreducible form: 2/4 is stored as 1/2
    // The denominator cannot be null
    // The denominator cannot be negative
    Fraction(int num, int denominator);
    int numerator;   // violation
    int denominator; // violation
    // ...
};
</pre>

<h5>Remediation sample</h5>

<pre>
class Fraction
{
public:
    // Invariants: 
    // The fraction is stored in irreducible form: 2/4 is stored as 1/2
    // The denominator cannot be null
    // The denominator cannot be negative
    Fraction(int num, int denominator);
    void setDenominator(int denominator)
    {
        assert(denominator != 0);
        myDenominator = denominator;
        normalize();
    }
private:
    void normalize(); // reduce to lowest terms and make the denominator positive
    int myNumerator;
    int myDenominator;
    // ...
};
</pre>

<h5>Output</h5>

<p>Associated to each C++ class member with violations, the Quality
Rule provides: - visibility - Bookmarks for violation patterns
found in the source code: - class member declaration</p>

<h5>Total</h5>

<p>Number of C++ class members</p>

<h5>Metric ID</h5>

<p>630</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("cast rules/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

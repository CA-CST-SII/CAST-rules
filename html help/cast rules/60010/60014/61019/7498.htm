<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Collection must be the same between getter and
setter</title>
<link rel="stylesheet" href="../../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../../default.css" type=
"text/css">

<script type="text/JavaScript" src="../../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "60010/60014/61019/7498.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../../index.html?page=cast%20rules%2F60010%2F60014%2F61019%2F7498.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../../index.html?page=cast%20rules%2F60010%2F60014%2F61019%2F7498.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Collection must be the same between getter and setter</h4>

<hr>

<h5>Technology</h5>

<p>JEE</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>No</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>8</p>

<h5>Rationale</h5>

<p>Hibernate or JPA implementation compares the objects by value
not by object identity to determine if the property's persistent
state needs to be updated. However, there is one very important
exception. Collections are compared by identity. For a property
mapped as a persistent collection, you should return exactly the
same collection instance from the getter method as Hibernate passed
to the setter method. If you don't, Hibernate will update the
database, even if no update is necessary, every time the session
synchronizes state held in memory with the database. This doesn't
mean you shouldn't return a different collection if you really are
replacing the current collection with a new collection with
completely different elements. In certain cases, this behavior can
even be an opportunity to increase performance.</p>

<h5>Description</h5>

<p>Reports all getters that don't return the same collection
instance as it was assigned by Hibernate or JPA to the setter
method: any modification of the setter parameter or the attribute
returned by the getter will be detected and reported. In setter
method, a modification occur when the class attribute is not
initialized with the parameter directly. And in the getter when the
return value is not the class attribute itself. To perform this
check, any call to a method or a constructor in the getter or
setter will be considered as a violation. This metric take into
account the case where getter and setter are implemented on an
inherited class of the persistent class (can happen when inherited
fields are persistent)</p>

<h5>Remediation</h5>

<p>Don't modify the collection.</p>

<h5>Reference</h5>

<p>Hibernate in Action (ISBN 1932394-15-X) p 74 The Java
Persistence API page 122 - ISBN 1-932394-88-5</p>

<h5>Sample</h5>

<pre>
public class Category {
  ...
  private List theList;

  public void setTheList(List myList) {
    theList =new ArrayList(myList) ; // VIOLATION
  }

  public List getTheList() {
    return new ArrayList(theList); // VIOLATION
  }
...
}
</pre>

<h5>Remediation sample</h5>

<pre>
public class Category {
  ...
  private List theList;

  public void setTheList(List myList) {
    theList =myList ; // FIXED
  }

  public List getTheList() {
    return theList; // FIXED
  }
...
}
</pre>

<h5>Output</h5>

<p>List all setter or getter methods of a persistent fields that
modify its collection parameter or return value. It provides the
following information: Method full name</p>

<h5>Total</h5>

<p>The total is the total number of hibernate or JPA persistent
fields setters and getters that have a Collection as parameter or
return value.</p>

<h5>Metric ID</h5>

<p>7498</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("cast rules/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

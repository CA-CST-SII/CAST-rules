<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Avoid static Field of type collection</title>
<link rel="stylesheet" href="../../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../../default.css" type=
"text/css">

<script type="text/JavaScript" src="../../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "60010/60014/61018/7562.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../../index.html?page=cast%20rules%2F60010%2F60014%2F61018%2F7562.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../../index.html?page=cast%20rules%2F60010%2F60014%2F61018%2F7562.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Avoid static Field of type collection</h4>

<hr>

<h5>Technology</h5>

<p>JEE</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>No</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>4</p>

<h5>Rationale</h5>

<p>In a production environment, memory leaks can force
organizations to add more memory and hardware resources. They can
even cause an application to crash unexpectedly. In theory, the
garbage collector is responsible to manage memory and should avoid
these issues. In practice, static collection classes, such as
HashMap and Vector can cause memory leak. Static collections are
likely to cause memory leaks because static variables remain in
memory as long as the application runs, regardless of its object
creation and destruction. So because their life cycle is the
application duration, the objects that they reference will be kept
in memory until the application end.</p>

<h5>Description</h5>

<p>Reports all static field defined as a class or interface that
implements: * java.util.Collection or java.util.Collection&lt;E&gt;
* or java.util.Map or java.util.Map&lt;K,V&gt; except when: - it is
the class or a subclass of java.util.WeakHashMap or
java.util.WeakHashMap&lt;K,V&gt; - the field is defined as an
interface and is initialized with an instance of the class or a
subclass of java.util.WeakHashMap or
java.util.WeakHashMap&lt;K,V&gt;.</p>

<h5>Remediation</h5>

<p>You can either check that objects added in the collection are
removed when required or use weak references that will leverage the
garbage collector's ability to determine reachability of referenced
objects for you.</p>

<h5>Reference</h5>

<p>
http://weblogs.java.net/blog/enicholas/archive/2006/05/understanding_w.html
http://websphere.sys-con.com/read/44716.htm</p>

<h5>Sample</h5>

<pre>
class Sample {
    // VIOLATION
    static HashMap my_map;
    ...
}
</pre>

<h5>Remediation sample</h5>

<pre>
class Sample {
    // FIXED
    static WeakHashMap my_map;
    ...
}
</pre>

<h5>Output</h5>

<p>This report lists all static field defined as collection (class
or interface). It provides the following information: Field full
name</p>

<h5>Total</h5>

<p>Number of static field defined as collection (class or
interface), java.util.WeakHashMap or
java.util.WeakHashMap&lt;K,V&gt;</p>

<h5>Metric ID</h5>

<p>7562</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("cast rules/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

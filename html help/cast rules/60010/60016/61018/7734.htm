<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Avoid to use Log.debug() without calling
Log.isDebugEnabled()</title>
<link rel="stylesheet" href="../../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../../default.css" type=
"text/css">

<script type="text/JavaScript" src="../../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "60010/60016/61018/7734.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../../index.html?page=cast%20rules%2F60010%2F60016%2F61018%2F7734.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../../index.html?page=cast%20rules%2F60010%2F60016%2F61018%2F7734.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Avoid to use Log.debug() without calling
Log.isDebugEnabled()</h4>

<hr>

<h5>Technology</h5>

<p>JEE</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>No</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>3</p>

<h5>Rationale</h5>

<p>While disabling debug logging level in production, it still
impacts performance of your application because the method
invocation involves the hidden cost of parameter construction. For
example: &lt;&lt; cat.debug("Entry number: " + i + " is " +
String.valueOf(entry[i])) &gt;&gt; incurs the cost of constructing
the message parameter that is converting both integer i and
entry[i] to a String and concatenating intermediate strings,
regardless of whether the message will be logged or not.</p>

<h5>Description</h5>

<p>Reports all methods that call: . org.apache.log4j.Category.debug
and not org.apache.log4j.Category. isDebugEnabled(). Or .
org.apache.commons.logging.Log.debug and not
org.apache.commons.logging.Log.isDebugEnabled(). Or . Refers to
java.util.logging.Logger.finest and not call
java.util.logging.Logger.isLoggable Two thresholds permit to add a
list of full qualified debug methods and isDebugEnabled methods
name. A debug method name in the list must have its corresponding
isDebugEnabled name at the same index.</p>

<h5>Remediation</h5>

<p>Add a if condition with a call to isDebugEnabled() before
calling any .debug().</p>

<h5>Reference</h5>

<p>http://www.javaworld.com/jw-11-2000/jw-1122-log4j.html
http://burtbeckwith.com/blog/?cat=8</p>

<h5>Sample</h5>

<pre>
import org.apache.log4j.*;

public class MyClass {
    Category cat = Category.getInstance(MyClass.class.getName());
    String entry [];

    public static void aMethod(int i) {

        cat.debug("Entry number: " + i + " is " + String.valueOf(entry[i])); // VIOLATION
   }
</pre>

<h5>Remediation sample</h5>

<pre>
import org.apache.log4j.*;

public class MyClass {
    Category cat = Category.getInstance(MyClass.class.getName());
    String entry [];

    public static void aMethod(int i) {

        if (cat.isDebugEnabled()) { //FIXED
            cat.debug("Entry number: " + i + " is " + String.valueOf(entry[i])); 
        }
   }
</pre>

<h5>Output</h5>

<p>This report lists all methods that violate this rule. It
provides the following information: Method Full Name, the number of
call to debug() without a call to isDebugEnabled()</p>

<h5>Total</h5>

<p>the number of methods that call debug() methods (i.e:
org.apache.log4j.Category.debug,
org.apache.commons.logging.Log.debug and the debug method list of
the threashold)</p>

<h5>Metric ID</h5>

<p>7734</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("cast rules/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

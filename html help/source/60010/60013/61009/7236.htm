<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Avoid recursive calls with PERFORM statements</title>
<link rel="stylesheet" href="../../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../../default.css" type=
"text/css">

<script type="text/JavaScript" src="../../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "60010/60013/61009/7236.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../../index.html?page=source%2F60010%2F60013%2F61009%2F7236.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../../index.html?page=source%2F60010%2F60013%2F61009%2F7236.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Avoid recursive calls with PERFORM statements</h4>

<hr>

<h5>Technology</h5>

<p>Cobol</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>Yes</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>8</p>

<h5>Rationale</h5>

<p>The PERFORM statement allows calling paragraphs with several
call levels. However, Cobol is not a recursive language and can not
manage paragraph recursive calls correctly. When a paragraph is
called via a PERFORM statement, then the calling statement is saved
into a stack and the control flow jumps to the beginning of the
called paragraph. At the end of this paragraph, then the control
flow returns to the calling statement. A recursive call can alter
the calling statement stack and the control flow may be
unpredictable. Furthermore, all data are global to the program.
Then, if a paragraph called at level 'n' modifies a data, then this
data is modified for all the call levels. For all these reasons, it
is better to replace paragraph recursive calls by loops.</p>

<h5>Description</h5>

<p>This rule searches for Cobol programs in which paragraphs call
themselves with a PERFORM statement.</p>

<h5>Remediation</h5>

<p>Try to remove recursive algorithms in the program and replace
them by iterative algorithms.</p>

<h5>Reference</h5>

<p>IBM Enterprise Cobol for z/OS - Language Reference</p>

<h5>Sample</h5>

<pre>
PROCEDURE DIVISION.
       PROCESS.
           MOVE 0 TO A.
           PERFORM PROC-01.
           GOBACK.

       PROC-01.
           ADD 1 TO A.
      * If condition is true then there is a recursive call
           IF A &lt; 13 THEN
               PERFORM PROC-01
           END-IF
</pre>

<h5>Remediation sample</h5>

<pre>
PROCEDURE DIVISION.
       PROCESS.
           MOVE 0 TO A.
           PERFORM PROC-01 UNTIL A = 13.
           GOBACK.

       PROC-01.
           ADD 1 TO A.
</pre>

<h5>Output</h5>

<p>Associated to each COBOL Program with violations, the Quality
Rule provides: - The number of violation patterns - Bookmarks for
violation patterns found in source code: - PERFORM statement that
refers to the paragraph it belongs to</p>

<h5>Total</h5>

<p>Number of Cobol Programs</p>

<h5>Metric ID</h5>

<p>7236</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("source/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

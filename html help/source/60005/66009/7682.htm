<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Avoid domain model depending on other Java API</title>
<link rel="stylesheet" href="../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../default.css" type="text/css">

<script type="text/JavaScript" src="../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "60005/66009/7682.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../index.html?page=source%2F60005%2F66009%2F7682.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../index.html?page=source%2F60005%2F66009%2F7682.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Avoid domain model depending on other Java API</h4>

<hr>

<h5>Technology</h5>

<p>JEE</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>No</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>6</p>

<h5>Rationale</h5>

<p>The domain model implementation is usually a central, organizing
component; it's reused heavily whenever you implement new
application functionality. For this reason, you should be prepared
to go to some lengths to ensure that concerns other than business
aspects don't leak into the domain model implementation. The domain
model should be concerned only with modeling the business domain.
When these concerns start to appear in the domain model classes, we
call this an example of leakage of concerns. For example, code in
the domain model shouldn't perform JNDI lookups or call the
database via the JDBC API. This allows you to reuse the domain
model implementation virtually anywhere. Most importantly, it makes
it easy to unit test the domain model (in JUnit, for example)
outside of any application server or other managed environment.</p>

<h5>Description</h5>

<p>Reports any direct or indirect (via successive calls) calls from
persistent classes' artifact to the methods of the following
packages: - java.sql.* - javax.sql.* - javax.naming.* (include
javax.naming.directory, javax.naming.event, javax.naming.ldap,
javax.naming.spi) - javax.jms.* Note that we don't take into
account method parameters and exception that belongs to these
packages. This list can be completed with the threshold.</p>

<h5>Remediation</h5>

<p>Make these calls in another layers.</p>

<h5>Reference</h5>

<p>Hibernate in Action (ISBN 1932394-15-X) p 64</p>

<h5>Sample</h5>

<pre>
----&gt; a.hbm.xml
&lt;hibernate-mapping &gt;
  
  &lt;class name="A" table="A" lazy="true"&gt;
    &lt;id name="id" column="A_ID"&gt;
      &lt;generator class="increment"/&gt;
    &lt;/id&gt;
  &lt;/class&gt;

&lt;/hibernate-mapping&gt;

----&gt; Java Files
public class A {
  private Integer id;
   javax.naming.Context ctx;  // VIOLATION
  ...
  public void aMethod() {
    // VIOLATION
    AnObject a = (AnObject) ctx.lookup("AnObject");
  }
  ...
}
</pre>

<h5>Output</h5>

<p>List all persistent classes' artifact that call other JAVA API.
It provides the following information: Artifact Full Name</p>

<h5>Total</h5>

<p>The number of persistent classes's artifacts</p>

<h5>Metric ID</h5>

<p>7682</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("source/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

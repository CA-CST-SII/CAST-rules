<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Avoid cyclical calls and inheritances between namespaces
content</title>
<link rel="stylesheet" href="../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../default.css" type="text/css">

<script type="text/JavaScript" src="../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "60005/61001/7294.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../index.html?page=source%2F60005%2F61001%2F7294.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../index.html?page=source%2F60005%2F61001%2F7294.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Avoid cyclical calls and inheritances between namespaces
content</h4>

<hr>

<h5>Technology</h5>

<p>.Net, C#</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>Yes</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>7</p>

<h5>Rationale</h5>

<p>When two namespaces refer to each other through a call, the
result is a circular dependency. Neither namespaces can function
without the other, and so neither is reusable without the other. In
some cases redesign may eliminate these dependencies. When circular
references are necessary, redesign it to ensure reusability. The
same problem happen when some classes from a namespace A inherit
from classes of a namespace B and other classes from namespace B
inherit from other classes from namespace A. This rule can be
extended to circular dependencies for more than 2 namespaces (for
example a namespace A call a namespace B that call a namespace C,
that call namespace A).</p>

<h5>Description</h5>

<p>This metric reports all namespaces that have one-on-one and more
static circular dependencies. Dependencies mean: - references
through static methods call - references through class fields -
references through inheritance Note that all these links are static
link and not runtime. The threshold parameter permit to define the
maximal number of namespaces to cross for a cycle. Note that cycle
notion means here a directed path in a graph that is directed by
dependencies relations.</p>

<h5>Remediation</h5>

<p>If there are circular relationships among namespaces, the
partitioning is not clear and should be redesigned. Use CAST
Enlighten to see all dependencies to fix.</p>

<h5>Sample</h5>

<pre>
* Direct call sample:

namespace CyclicalCallsA
{
    public static class ClassA
    {
        public static void f()
        {
            CyclicalCallsB.ClassB.g();
        }
    }
}

namespace CyclicalCallsB
{
    public static class ClassB
    {
        public static void g()
        {
            CyclicalCallsA.ClassA.f();
        }
    }
}


* Call due to inheritance:
namespace CyclicalCallsWIA
{
    public class ClassWIA
    {
        public static void f()
        {
            CyclicalCallsB.ClassB.g();
        }
    }
}

namespace CyclicalCallsWIB
{
    public class ClassWIB : CyclicalCallsWIA.ClassWIA
    {
        public static void g()
        {
        }
    }
}
</pre>

<h5>Output</h5>

<p>This report lists all namespaces with static cyclical call to or
inheritance with another .NET namespace. It provides the following
information: namespace full name, cyclically called / inherited
namespace full name</p>

<h5>Total</h5>

<p>Total number of namespaces</p>

<h5>Metric ID</h5>

<p>7294</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("source/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

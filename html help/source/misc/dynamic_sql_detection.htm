<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />
<meta http-equiv="Content-Language" content="en">

<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Dynamic SQL Detection</title>
<link rel="stylesheet" href="../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../default.css" type="text/css">

<script type="text/JavaScript" src="../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "misc/dynamic_sql_detection.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../index.html?page=source%2Fmisc%2Fdynamic_sql_detection.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../index.html?page=source%2Fmisc%2Fdynamic_sql_detection.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Dynamic SQL Detection</h4>

<hr>

<p>CAST Analyzers integrate an artificial intelligence engine
(Inference Engine) that detects, re-builds and analyses Dynamic SQL
strings scattered through the client code such as Java, C#, COBOL,
ABAP, etc.</p>

<p>This CAST artificial intelligence engine is able to identity
with a very high degree of certainty which strings in the source
code contain SQL. These strings are then stored in the CAST
Knowledge Base and used to generate SQL metrics and quality
rules.</p>

<p>Since dynamic SQL can be built from many different strings that
are concatenated in multiple places, there is a need to centralize
in one place the different potential SQL strings that can be
generated by the application. So, the SQL strings that have been
concatenated and rebuilt by the CAST artificial intelligence engine
are then attached to the object that sends the dynamic SQL string
to the database.</p>

<p>In the below screenshot, the SQL String calling the database
stored procedure would be attached to the C# method called
AddNewEmployeePhoto and to the C# method called
GetEmployeeDetails:</p>

<p><img border="0" src="images/dynamicsql.jpg" width="948" height=
"516">
</p>

<p>So even if there is no apparent SQL source code in the method,
the CAST end-user will find there the useful dynamic SQL strings
that can be the result of the dynamic SQL building process.</p>

<p>Most of the time, the number of these strings is rather limited.
However, depending on the complexity, the size of the application
and the highly dynamic behavior of the application, the number of
the different potential SQL strings can be high or very high. This
illustrates also the complexity of the application.</p>

<p>In very few cases when the application is extremely dynamic and
complex, the number of different potential SQL strings computed and
stored by CAST is so high that the feature has negative
consequences in terms of metrics quality results. The main
consequence to this situation is the fact that several SQL Metrics
show extremely high and erroneous values in the CAST AD Dashboard
and in CAST Enlighten such as:<br>
<br>
- Number of From clauses = 41816<br>
- Number of where clauses = 21692<br>
- Use of Select All = 14528<br>
- Number of subqueries = 23624<br>
<br>
The raw metric will generate incorrect violations on the following
Quality Rules:<br>
<br>
- Avoid Dynamic SQL Objects With Queries on more than 4 Tables<br>
- Avoid Artifacts With Queries on more than 4 Tables<br>
- Avoid Artifacts with High RAW SQL Complexity<br>
- Avoid Artifacts with a Complex SELECT Clause<br>
- Avoid SQL Artifacts with SQL statement including Subqueries<br>
- Prefer UNION ALL to UNION</p>

<p>This issue will be solved by CAST with an evolution of the
artificial intelligence engine in 2011. In the meantime, the issue
of erroneous violations can be worked around:</p>

<p><b>Workaround No 1</b>
</p>

<p>Remove the XML files that enable the generation of SQL
Complexity related metrics :</p>

<ul>
<li>&lt;CAST Home Dir&gt;\configuration\Metrics\Package\SQL
Metric\RawSqlComplexity.xml</li>

<li>&lt;CAST Home Dir&gt;\configuration\Metrics\Package\SQL
Metric\Select9Columns.xml</li>
</ul>

<p><b>Workaround No 2</b>
</p>

<p>Reduce the number of SQL strings computed by the artificial
intelligence engine (Inference Engine). In</p>

<pre>
%ALLUSERSPROFILE%\CAST\CAST\&lt;version_number&gt;\GloballySharedSettings.ini
</pre>

<p>search for the section <b>[Inference Engine]</b> set the
<b>LimitString</b> parameter to <b>200</b>. If this section does
not exist, create it and add the following parameters :</p>

<pre>
[Inference Engine]
LimitString=200
LimitSubTarget=5000
</pre>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("source/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

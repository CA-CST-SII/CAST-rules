<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Provide a private default Constructor for utility Classes or
use free Functions in a Namespace</title>
<link rel="stylesheet" href="../../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../../default.css" type=
"text/css">

<script type="text/JavaScript" src="../../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "66030/66031/61018/7996.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../../index.html?page=source%2F66030%2F66031%2F61018%2F7996.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../../index.html?page=source%2F66030%2F66031%2F61018%2F7996.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Provide a private default Constructor for utility Classes or
use free Functions in a Namespace</h4>

<hr>

<h5>Technology</h5>

<p>C++</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>No</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>4</p>

<h5>Rationale</h5>

<p>Utility classes are not meant to be instantiated because all the
functionalities they provide are accessible without instantiating
the class. Instantiating those classes means that the developer
misused the class. It also consumes memory unnecessarily. Providing
a private default constructor ensures that the class cannot be
instantiated.</p>

<h5>Description</h5>

<p>This rule searches for utility classes which do not have any
constructors. Utility classes are static classes: all their fields
and functions are static and at least one static function must
exist. Default constructors are constructors without any
parameters. Note: The following do not prevent a class from being
considered as static: - Non-static Constructors - Destructors -
Affectation assignment operators A class containing only protected
constructors (instead of private) is not considered as violating
the rule.</p>

<h5>Remediation</h5>

<p>Two possibilities: - Add a private default constructor to ensure
that the class can't be instantiated. This constructor only needs
to be declared, not defined, since it will never be used. - Use a
dedicated namespace instead of a utility class in order to classify
related functions inside a named entity. The namespace solution is
usually to be preferred, because: - A namespace can be extended to
another file - A using directive or using declaration can ease the
use of functions in the namespace if there is no name conflict
There are cases when the namespace is not suitable, especially when
the class is to be used as a template parameter (for instance, a
trait class).</p>

<h5>Sample</h5>

<pre>
class MyUtilityClass
{
public:
    static bool MyUtilityFunction1() 
    {
        //Do Something Usefull 
        return true;
    }
};  // VIOLATION
</pre>

<h5>Remediation sample</h5>

<pre>
It is possible to correct this violation by making the utility class non instantiable:

class MyUtilityClass
{
public:
    static bool MyUtilityFunction1() 
    {
        //Do Something Usefull 
        return true;
    }

private :
    MyUtilityClass(); // FIXED: Avoid instantiation of the class. No definition
};

Or by using a namespace instead:

namespace MyUtility {

bool MyUtilityFunction1() 
{
    //Do Something Usefull 
    return true;
}

} // namespace MyUtility
</pre>

<h5>Output</h5>

<p>Associated to each C++ utility class with violations, the
Quality Rule provides: - the number of violation patterns -
Bookmarks for violation patterns found in the source code: -
class</p>

<h5>Total</h5>

<p>Number of utility classes</p>

<h5>Metric ID</h5>

<p>7996</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("source/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Avoid indirect String concatenation inside loops</title>
<link rel="stylesheet" href="../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../default.css" type="text/css">

<script type="text/JavaScript" src="../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "language/j2ee/7954.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../index.html?page=source%2Flanguage%2Fj2ee%2F7954.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../index.html?page=source%2Flanguage%2Fj2ee%2F7954.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Avoid indirect String concatenation inside loops</h4>

<hr>

<h5>Technology</h5>

<p>JEE</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>No</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>7</p>

<h5>Rationale</h5>

<p>String concatenation is not efficient because it creates a
StringBuffer for each concatenation. When placed in an indirect
loop, String concatenation results in the creation and garbage
collection of large numbers of temporary objects. This both
consumes memory and can dramatically slow the program execution. It
is recommended to create a StringBuffer before entering the loop,
and append to it within the loop, thus reducing the overhead.</p>

<h5>Description</h5>

<p>All methods that call indirectly a method that uses string
concatenation in loops (for, while, do while) at a depth level less
than &lt;depth level&gt; will be reported. The depth level is
50.</p>

<h5>Remediation</h5>

<p>It is recommended to create a StringBuilder (if JDK &gt;= 1.5
and not in thread environment) or StringBuffer before entering the
loop, and append to it within the loop, thus reducing the
overhead.</p>

<h5>Reference</h5>

<p>
http://www.precisejava.com/javaperf/j2se/StringAndStringBuffer.htm#Strings104</p>

<h5>Sample</h5>

<pre>
public class ConcatenationTest {

  public String concatString(String name) {
    String result = "hello ";
    result += name;
   return result
  }
}

public class LoopTest {
  static final int N = 18000000;
  private ConcatenationTest ct = new ConcatenationTest();
 
  public void myLoop(void) {
    String name = "bob";
    for (int i = 1; i &lt;= N; i++) {
      ct.concatString(name); // VIOLATION
    }
  }
}
</pre>

<h5>Remediation sample</h5>

<pre>
public class ConcatenationTest {
  public void concatString(StringBuffer result, String name) {
    result.append(name);
  }
}

public class LoopTest {
  static final int N = 18000000;
  private ConcatenationTest ct = new ConcatenationTest();
 
  public void myLoop() {
    StringBuffer result = "hello";
    String name = "bob";
    for (int i = 1; i &lt;= N; i++) {
      ct.concatString(result, name); // FIXED
    }
  }
}
</pre>

<h5>Output</h5>

<p>This reports all methods that call indirectly string
concatenation in loops. It provides the following information:
Method full name that has the loop, the call path from the method
that contains the loop to the method that does the concatenation.
Note that: 1/ The the call paths may contain different paths while
only one path is a violation. For example: void concatString(String
name) { String result = " concat "; result += name; } void g()
{concatString(" String ");} void f() { while (myCondition) { g ();}
g(); } will report both path to g() while only one is a violation.
2/ Several paths for the same method violating the rule are
identified in the Metric Detail page by a sequence ID (in the Value
column), this ID is dynamically set during each snapshot and the
same path can have a different sequence ID in different snapshots.
(the value column), this value can vary from a snapshot to another
and is used just to distinguish the violations.</p>

<h5>Total</h5>

<p>All methods calling at least one method inside a loop</p>

<h5>Metric ID</h5>

<p>7954</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("source/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>

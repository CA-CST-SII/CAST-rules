<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="keywords" content="online documentation, web online help, web help, chm2web" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="chm2web Pro 2.85 (unicode)" />

<meta http-equiv="Content-Language" content="en">
<title>Suspicious similar method names or signatures in an
inheritance tree</title>
<link rel="stylesheet" href="../../../files/helpindex.css" type=
"text/css">
<link rel="stylesheet" href="../../../default.css" type="text/css">

<script type="text/JavaScript" src="../../../files/supply.js"></script>
<script type="text/JavaScript">
chmtop.c2wtopf.pageid = "language/j2ee/7440.htm";
</script>

</head>
<body><script type="text/JavaScript"> 
if (window.name != "content") 
  document.write(" <table width=\"100%\" bgcolor=\"#e1e1e1\"cellspacing=\"2\" cellpadding=\"0\" style=\"border-collapse: collapse; font-family: sans-serif; font-size: 14px; color: #000000; text-decoration: none;  \"> <tr> <td align=\"center\" style=\"border-bottom: 2px solid gray\" > <br>&nbsp;Click <a href=\"../../../index.html?page=source%2Flanguage%2Fj2ee%2F7440.htm\">here</a> to show toolbars of the Web Online Help System: <a href=\"../../../index.html?page=source%2Flanguage%2Fj2ee%2F7440.htm\">show toolbars</a><br>&nbsp;</td></tr></table><br> "); 
</script>
<!-- !chm2web! -->

<h4>Suspicious similar method names or signatures in an inheritance
tree</h4>

<hr>

<h5>Technology</h5>

<p>JEE</p>

<h5>Unified Status</h5>

<p>N/A</p>

<h5>XXL Status</h5>

<p>N/A</p>

<h5>Critical Quality Rule</h5>

<p>Yes</p>

<h5>Weight in Parent Tech. Criterion</h5>

<p>9</p>

<h5>Rationale</h5>

<p>When programming it is very easy to make a mistake when naming a
method to override or in its signature. This may occur when writing
the inherited class, but also when changing the signature of the
basic class to add a new parameter or when changing the type of a
parameter. One of the more typical examples is the overriding of
equals methods with an argument type that is different from the
Object class.</p>

<h5>Description</h5>

<p>Find all methods in an inheritance tree that have the same
signature but whose name differs only by capitalization and methods
that have the same name but are overridden with a different
signature (this signature doesn't exist in the super class) with
the following restrictions: - where the class implements an
interface, if one method with the same signature exists in the
class then no violation will be reported even if other methods
exist with different signatures - where the class extends another
class, a violation will be reported for a method only when the
number of parameters are the same and one of the parameters of the
signature of the child class method inherits from a parameter in
the same place as the parent class method with the same name.</p>

<h5>Remediation</h5>

<p>Fix the name of the method or the signature and if you use JSE
5.0 or later add the @Override annotation to inform the compiler
that the method is meant to override a method declared in a
superclass. If the method marked with @Override fails to correctly
override a method in one of its superclasses, the compiler
generates an error.</p>

<h5>Reference</h5>

<p>[1] http://www.artima.com/lejava/articles/equality.html - it
explains the consequences when equals for example is not well
overriden</p>

<h5>Sample</h5>

<pre>
class Example {
   int firstMethod (String str) {...}
   void secondMethod (int value, boolean b) {...}
}

class ExampleExtended extends Example{
   int firstmethod (String str) {...}  // VIOLATION because of 'm' that is not in uppercase as the parent class method
   void secondMethod (int value) {...} // VIOLATION
}
</pre>

<h5>Remediation sample</h5>

<pre>
class Example {
   int firstMethod (String str) {...}
   void secondMethod (int value, boolean b) {...}
}

class ExampleExtended extends Example{
   @Override     // only for JSE 5 or later
   int firstMethod (String str) {...}  // FIXED

   @Override     // only for JSE 5 or later
   void secondMethod (int value, boolean b) {...} // FIXED
}
</pre>

<h5>Output</h5>

<p>This report lists all methods that override a similar method
name or signature. It provides the following information: - Method
full name - Method overridden</p>

<h5>Total</h5>

<p>All methods that fails and all methods that override a method
from a superclass</p>

<h5>Metric ID</h5>

<p>7440</p>

<hr>

<p align="right"><a href="http://www.castsoftware.com" target=
"_blank"><img border="0" src="../../cast.gif" alt="CAST Website"
width="174" height="21"></a>
</p>

<script type="text/JavaScript">
var fe = FindFrame("toc", top);
if ((fe != null) && (chmtop.c2wtopf.jstree != null)) {
  if (chmtop.c2wtopf.FITEMS[chmtop.c2wtopf.pagenum] != chmtop.c2wtopf.pageid)
    chmtop.c2wtopf.jstree.OpenTreeNode("source/" + chmtop.c2wtopf.pageid);
}
</script>

<!-- CHM2WEB -->
<!-- DO NOT DELETE OR MODIFY THIS CODE WITHOUT 
     WRITTEN PERMISSION OF A!K RESEARCH LABS -->
<table width="100%" cellspacing="0" cellpadding="0" 
style="margin-top: 0pt; border-collapse: collapse;"> 
<tr> <td align="right" style="background-color:white; border-top: 1px solid gray;"> 
<a href="http://chm2web.aklabs.com" target="_blank" style="font-family: sans-serif;  font-size: 11px; text-decoration: none;"><font color="gray">Converted from CHM to HTML with <b>chm2web Pro 2.85 (unicode)</b></font></a>
</td></tr></table> 
<!-- /CHM2WEB -->

</body>
</html>
